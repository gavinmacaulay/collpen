function Hd = cp_bandpass_filter(fc)
%Z Returns a discrete-time filter object.

%
% MATLAB Code
% Generated by MATLAB(R) 7.14 and the Signal Processing Toolbox 6.17.
%
% Generated on: 19-Mar-2012 15:54:37
%
% Modified by Gavin

% Equiripple Bandpass filter designed using the FIRPM function.



% All frequency values are in Hz.
Fs = 10000;  % Sampling Frequency

Fstop1 = fc - 25;             % First Stopband Frequency
Fpass1 = fc - 10;             % First Passband Frequency
Fpass2 = fc + 10;             % Second Passband Frequency
Fstop2 = fc + 25;             % Second Stopband Frequency
Dstop1 = 0.001;           % First Stopband Attenuation
Dpass  = 0.057501127785;  % Passband Ripple
Dstop2 = 0.001;           % Second Stopband Attenuation
dens   = 20;              % Density Factor

if fc < 30 
    disp(['Centre frequency of ' num2str(fc) ' Hz is too low.'])
    Fstop1 = 0;
end

if fc > 5000
    disp(['Centre frequency of ' num2str(fc) ' Hz is too high.'])
    Fstop2 = 5000;
end


% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
                          0], [Dstop1 Dpass Dstop2]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% [EOF]