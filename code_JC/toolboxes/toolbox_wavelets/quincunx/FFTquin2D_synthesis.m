function x=FFTquin2D_synthesis(y2,J,FS);% FFTQUIN2D_SYNTHESIS Perform 2D quincunx wavelet synthesis% 	x = FFTquin2D_synthesis(y2,J,FS)%% 	Input:%       y2 = data (folded)%       J = number of interations%       FS = synthesis filters%%       Output:%       x = result (unfolded)%% Dimitri Van De Ville%      Biomedical Imaging Group, BIO-E/STI%      Swiss Federal Institute of Technology Lausanne%      CH-1015 Lausanne EPFL, Switzerland% Dimensions of input data[m,n]=size(y2);% Synthesis filters:%  H1,   G1   : filters for iterations with mod(j,2)=1%  H1D,  G1D  : filters for iterations with mod(j,2)=0H1=FS(:,:,1);G1=FS(:,:,2);H1D=FS(:,:,3);G1D=FS(:,:,4);% How many "double-iterations"? l=2^((J-mod(J,2))/2);M=m/l; N=n/l; % Dimensions of full data[M0,N0,P0]=size(H1);% Dimensions of folded lowpass subbandcm=M0; cn=N0; cn=cn/2^floor((J+1)/2);cm=cm/2^floor((J)/2);% Extract folded lowpass subband and unfoldy1=y2(1:cm,1:cn);y1=unfold2D(y1,mod(J,2),M,N);Y1=fftn(y1); clear y1;j=J;while j>0;	mj=mod(j,2);	% unfold highpass subband and select filters	switch mj,	  case 1,		f=unfold2D(y2(1:M,N/2+1:N),mj,M,N);		H=H1(1:l:M0,1:l:N0);		G=G1(1:l:M0,1:l:N0);	  case 0,		f=unfold2D(y2(M+1:2*M,1:N),mj,M,N);		l=l/2;		Y1=[Y1 Y1;Y1 Y1];		H=H1D(1:l:M0,1:l:N0);		G=G1D(1:l:M0,1:l:N0);	end;	Y2=fftn(f); clear f;		if mj==0,	 	Y2=[Y2 Y2;Y2 Y2];		M=2*M; N=2*N;	end;	% filter data	Y1=Y1.*H + Y2.*G;	j=j-1;end;x=real(ifftn(Y1));return;% ----------------------------------------------------------------------% Unfold 2D subband% ----------------------------------------------------------------------function u=unfold2D(y,j,M,N)switch j,  case 0,    u=y;  case 1,    u=zeros(M,N);    u(1:2:M,1:2:N)=y(1:2:M,:);    u(2:2:M,2:2:N)=y(2:2:M,:); end;return;